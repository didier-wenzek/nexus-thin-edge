#!/bin/bash

if [ $# -le 2 ]
then
    exec /usr/bin/tedge $@
fi

if [ "$1 $2 $3" != "cert request --c8y" ]
then
    exec /usr/bin/tedge $@
fi

if [ $# -ne 7 ]
then
    echo "usage: $0 cert request --c8y <DEVICE_ID> <C8Y_URL> <C8Y_TENANT> <C8Y_USER>"
    echo "    Request a certificate to connect this device to Cumulocity"
    echo
    echo "    DEVICE_ID:    the device identifier to be used as a common name for this device"
    echo "    C8Y_URL:      the Cumulocity base url"
    echo "    C8Y_TENANT:   the Cumulocity tenant where this device is registered"
    echo "    C8Y_USER:     the Cumulocity user on whose behalf this device is trusted"
    exit
fi

CN=$4
C8Y=$5
TENANT=$6
USER=$7
PASS=$(read -s -p "Password: "; echo $REPLY)

## Register the request on C8Y
CSR_CRED=$(curl -s --user $TENANT/$USER:$PASS https://$C8Y/service/tedge-device-registry/register/$CN)
CSR_HOST=$(echo $CSR_CRED | jq -r .endpoint)
CSR_USER=$(echo $CSR_CRED | jq -r .user)
CSR_PASS=$(echo $CSR_CRED | jq -r .pass)

## Create the CSR
./create-signing-request.sh $CN $TENANT $CN.key $CN.csr

## Post the CSR request
curl -s -H "Content-Type: application/pkcs10" \
    --data-binary @$CN.csr \
    --user "$CSR_USER:$CSR_PASS" --digest \
    -k $CSR_HOST |

    ./add-pkcs7-header.sh |
    openssl pkcs7 -print_certs |
    ./extract-cert.sh >$CN.pem

## Add the chain to the certificate
cat sag-nexus.root >>$CN.pem

## Use the certificate
sudo mv $CN.key /etc/tedge/device-certs/
sudo mv $CN.pem /etc/tedge/device-certs/
sudo chown mosquitto:mosquitto /etc/tedge/device-certs/$CN.*
sudo chmod a-w /etc/tedge/device-certs/$CN.*

sudo /usr/bin/tedge config set device.key.path /etc/tedge/device-certs/$CN.key
sudo /usr/bin/tedge config set device.cert.path /etc/tedge/device-certs/$CN.pem
